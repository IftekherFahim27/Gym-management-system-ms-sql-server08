/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gym;

import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author MN
 */
public class AdminMain extends javax.swing.JFrame {

    /**
     * Creates new form AdminMain
     */
    Admin_Info ai;
    String path = null;
    DBConnect dbc;
    int flag = 0;

    String modes = null;
    int temp = 0;
    int tm_payment = 0;

    public AdminMain(Admin_Info ai) {
        initComponents();
        this.ai = ai;

        ad_id.setText(Integer.toString(ai.getOwn_id()));
        f_name.setText(ai.getFname());
        age.setText(Integer.toString(ai.getAg()));
        gender.setText(ai.getGen());
        height.setText(ai.getHt());
        weight.setText(ai.getWt());
        bg.setText(ai.getBl());
        mobile.setText(ai.getMob());
        email.setText(ai.getMail());
        nid.setText(ai.getNd());
        String img = ai.getPic();
        ImageIcon newimage = new ImageIcon(img);
        pic.setIcon(newimage);

        ad_b_pin.setText(ai.getPin());

        ad_pic_choser.setVisible(false);
        pic_path.setVisible(false);
        ad_apply.setVisible(false);
        ad_clr.setVisible(false);

        path = img;

        apply.setVisible(false);
        Cancel.setVisible(false);

        ad_b_app.setVisible(false);
        ad_b_can.setVisible(false);
        ad_b_pin.setEditable(false);

        mem_bill_show_one.setVisible(false);
        ad_show_billmon.setVisible(false);

    }

    public boolean checkmobile(String str) {
        int upper = 0, lower = 0, number = 0, special = 0;

        for (int i = 0; i < str.length(); i++) {
            char ch = str.charAt(i);
            if (ch >= 'A' && ch <= 'Z') {
                upper++;
            } else if (ch >= 'a' && ch <= 'z') {
                lower++;
            } else if (ch >= '0' && ch <= '9') {
                number++;
            } else {
                special++;
            }
        }
        if (special == 0 && upper == 0 && number == 11 && lower == 0) {
            return true;
        } else {
            return false;

        }
    }

    public boolean checkemail(String str) {
        int upper = 0, lower = 0, number = 0, special1 = 0, special2 = 0;

        for (int i = 0; i < str.length(); i++) {
            char ch = str.charAt(i);
            if (ch >= 'A' && ch <= 'Z') {
                upper++;
            }
            if (ch >= 'a' && ch <= 'z') {
                lower++;
            }
            if (ch >= '0' && ch <= '9') {
                number++;
            }
            if (ch == '@') {
                special1++;
            }
            if (ch == '.') {
                special2++;
            }
        }
        if (special1 == 1 && special2 == 1 && upper == 0 && number >= 1 && lower >= 1) {
            return true;
        } else {
            return false;

        }
    }
    ResultSet resultset;
    ResultSet resultset2;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        con_mode = new javax.swing.ButtonGroup();
        pane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        ag = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        e = new javax.swing.JLabel();
        nid = new javax.swing.JTextField();
        mobile = new javax.swing.JTextField();
        weight = new javax.swing.JTextField();
        gender = new javax.swing.JTextField();
        ad_id = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        w = new javax.swing.JLabel();
        m = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        f_name = new javax.swing.JTextField();
        age = new javax.swing.JTextField();
        height = new javax.swing.JTextField();
        bg = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        pic = new javax.swing.JLabel();
        ad_out = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        show_pass = new javax.swing.JLabel();
        pic_path = new javax.swing.JTextField();
        ad_pic_choser = new javax.swing.JButton();
        ad_apply = new javax.swing.JButton();
        ad_up = new javax.swing.JButton();
        ad_clr = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        trainer = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Mentor_Info_table = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        Mn_fresher = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        subtrainer = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        fresher_Info_table = new javax.swing.JTable();
        jLabel45 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        fr_member = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jLabel51 = new javax.swing.JLabel();
        member = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Member_table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        m_del_btn = new javax.swing.JButton();
        search_by_contact = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        mname = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        mcom = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        mbg = new javax.swing.JTextField();
        m_search_name = new javax.swing.JButton();
        m_clr_btn = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        search_by_bg = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        me_id = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        equip = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        equip_table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        Show_btn = new javax.swing.JButton();
        en = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        ep = new javax.swing.JLabel();
        ed = new javax.swing.JLabel();
        uname = new javax.swing.JTextField();
        u_id = new javax.swing.JTextField();
        uprb = new javax.swing.JTextField();
        Add_btn = new javax.swing.JButton();
        Update_Btn = new javax.swing.JButton();
        Delete_btn = new javax.swing.JButton();
        Clear_btn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        date = new com.toedter.calendar.JDateChooser();
        el = new javax.swing.JLabel();
        ec = new javax.swing.JLabel();
        New_btn = new javax.swing.JRadioButton();
        rec_btn = new javax.swing.JRadioButton();
        dam_btn = new javax.swing.JRadioButton();
        repa_btn = new javax.swing.JRadioButton();
        E_ID_FORMAT = new javax.swing.JLabel();
        Cancel = new javax.swing.JButton();
        apply = new javax.swing.JButton();
        jLabel48 = new javax.swing.JLabel();
        bill = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        expense_table = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        cb = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        ib = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        wb = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        ne = new javax.swing.JTextField();
        ac = new javax.swing.JTextField();
        r = new javax.swing.JTextField();
        o = new javax.swing.JTextField();
        total = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        b_update_btn = new javax.swing.JButton();
        b_show_btn = new javax.swing.JButton();
        b_add_btn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        payment_total = new javax.swing.JTextField();
        payment_calculate = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        e_month = new com.toedter.calendar.JMonthChooser();
        e_year = new com.toedter.calendar.JYearChooser();
        ad_select_ex_month = new javax.swing.JButton();
        ad_ex_date_clear = new javax.swing.JButton();
        ad_ex_mon_y = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        total_expense_calculate = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        ad_b_pin = new javax.swing.JTextField();
        ad_b_up = new javax.swing.JButton();
        ad_b_app = new javax.swing.JButton();
        ad_b_can = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        mem_id = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        ad_mem_bill_table = new javax.swing.JTable();
        mem_bill_show = new javax.swing.JButton();
        mem_name = new javax.swing.JTextField();
        mem_pack = new javax.swing.JTextField();
        mem_bill = new javax.swing.JTextField();
        mem_aod = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        mem_bill_show_one = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        b_month = new com.toedter.calendar.JMonthChooser();
        b_year = new com.toedter.calendar.JYearChooser();
        ad_select_bill_month = new javax.swing.JButton();
        ad_b_b_mon_y = new javax.swing.JTextField();
        ad_show_billmon = new javax.swing.JButton();
        ad_mem_clear = new javax.swing.JButton();
        ad_date_clear = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        bill_total = new javax.swing.JTextField();
        bill_calculate = new javax.swing.JButton();
        jLabel35 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1205, 720));
        setPreferredSize(new java.awt.Dimension(1210, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pane.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N
        pane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paneMouseClicked(evt);
            }
        });

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel30.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText(" Name");
        jLabel30.setToolTipText("");
        jPanel2.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        ag.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        ag.setForeground(new java.awt.Color(255, 255, 255));
        ag.setText("Age");
        jPanel2.add(ag, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, -1));

        jLabel32.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Height(cm)");
        jPanel2.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, -1, -1));

        jLabel33.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Blood Group");
        jPanel2.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, -1, -1));

        e.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        e.setForeground(new java.awt.Color(255, 255, 255));
        e.setText("Email");
        jPanel2.add(e, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 540, -1, -1));

        nid.setEditable(false);
        nid.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        nid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nidMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nidMouseExited(evt);
            }
        });
        jPanel2.add(nid, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 530, 200, 40));

        mobile.setEditable(false);
        mobile.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        mobile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mobileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mobileMouseExited(evt);
            }
        });
        jPanel2.add(mobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 440, 200, 40));

        weight.setEditable(false);
        weight.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jPanel2.add(weight, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 360, 200, 40));

        gender.setEditable(false);
        gender.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jPanel2.add(gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 280, 200, 40));

        ad_id.setEditable(false);
        ad_id.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        ad_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad_idActionPerformed(evt);
            }
        });
        jPanel2.add(ad_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 180, 200, 40));

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ID");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 180, 107, 31));

        jLabel36.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText(" Gender (M/F)");
        jLabel36.setToolTipText("");
        jPanel2.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 290, -1, -1));

        w.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        w.setForeground(new java.awt.Color(255, 255, 255));
        w.setText("Weight(kg)");
        w.setToolTipText("");
        jPanel2.add(w, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 370, -1, -1));

        m.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        m.setForeground(new java.awt.Color(255, 255, 255));
        m.setText("Mobile");
        m.setToolTipText("");
        jPanel2.add(m, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 450, 80, -1));

        jLabel39.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("NID");
        jPanel2.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 530, -1, -1));

        f_name.setEditable(false);
        f_name.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jPanel2.add(f_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 200, 40));

        age.setEditable(false);
        age.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jPanel2.add(age, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, 200, 40));

        height.setEditable(false);
        height.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        height.setToolTipText("");
        jPanel2.add(height, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 360, 200, 40));

        bg.setEditable(false);
        bg.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        bg.setToolTipText("");
        bg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bgMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bgMouseExited(evt);
            }
        });
        jPanel2.add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 450, 200, 40));

        email.setEditable(false);
        email.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        email.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                emailMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                emailMouseExited(evt);
            }
        });
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });
        jPanel2.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 530, 210, 40));

        pic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pic.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.add(pic, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 100, 250, 240));

        ad_out.setBackground(new java.awt.Color(0, 0, 0));
        ad_out.setFont(new java.awt.Font("Niagara Engraved", 1, 18)); // NOI18N
        ad_out.setForeground(new java.awt.Color(255, 255, 204));
        ad_out.setText("LogOut");
        ad_out.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad_outActionPerformed(evt);
            }
        });
        jPanel2.add(ad_out, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 560, 110, 40));

        jLabel41.setFont(new java.awt.Font("Niagara Engraved", 1, 55)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("Personal Info");
        jPanel2.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 270, -1));

        show_pass.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        show_pass.setForeground(new java.awt.Color(255, 0, 0));
        show_pass.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        show_pass.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel2.add(show_pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 230, 230, 60));

        pic_path.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pic_pathActionPerformed(evt);
            }
        });
        jPanel2.add(pic_path, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 360, 250, 30));

        ad_pic_choser.setBackground(new java.awt.Color(0, 0, 0));
        ad_pic_choser.setFont(new java.awt.Font("Niagara Engraved", 1, 18)); // NOI18N
        ad_pic_choser.setForeground(new java.awt.Color(255, 255, 255));
        ad_pic_choser.setText("Attach");
        ad_pic_choser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad_pic_choserActionPerformed(evt);
            }
        });
        jPanel2.add(ad_pic_choser, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 400, 110, 40));

        ad_apply.setBackground(new java.awt.Color(0, 0, 0));
        ad_apply.setFont(new java.awt.Font("Niagara Engraved", 1, 18)); // NOI18N
        ad_apply.setForeground(new java.awt.Color(0, 153, 0));
        ad_apply.setText("Apply");
        ad_apply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad_applyActionPerformed(evt);
            }
        });
        jPanel2.add(ad_apply, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 460, 80, 40));

        ad_up.setBackground(new java.awt.Color(0, 0, 0));
        ad_up.setFont(new java.awt.Font("Niagara Engraved", 1, 18)); // NOI18N
        ad_up.setForeground(new java.awt.Color(255, 204, 204));
        ad_up.setText("Update");
        ad_up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad_upActionPerformed(evt);
            }
        });
        jPanel2.add(ad_up, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 460, 110, 40));

        ad_clr.setBackground(new java.awt.Color(0, 0, 0));
        ad_clr.setFont(new java.awt.Font("Niagara Engraved", 1, 18)); // NOI18N
        ad_clr.setForeground(new java.awt.Color(255, 0, 51));
        ad_clr.setText("Cancel");
        ad_clr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad_clrActionPerformed(evt);
            }
        });
        jPanel2.add(ad_clr, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 460, 90, 40));

        jLabel47.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gym/Pic/table.png"))); // NOI18N
        jPanel2.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1190, 660));

        pane.addTab("Profile", jPanel2);

        trainer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Mentor_Info_table.setBackground(java.awt.Color.lightGray);
        Mentor_Info_table.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        Mentor_Info_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mentor ID", "Mentor_Name", "Contact", "Blood Group", "Package", "Working Hour", "Salary", "Joining Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Mentor_Info_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Mentor_Info_tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Mentor_Info_table);
        if (Mentor_Info_table.getColumnModel().getColumnCount() > 0) {
            Mentor_Info_table.getColumnModel().getColumn(0).setResizable(false);
            Mentor_Info_table.getColumnModel().getColumn(0).setPreferredWidth(43);
            Mentor_Info_table.getColumnModel().getColumn(1).setResizable(false);
            Mentor_Info_table.getColumnModel().getColumn(1).setPreferredWidth(100);
            Mentor_Info_table.getColumnModel().getColumn(2).setResizable(false);
            Mentor_Info_table.getColumnModel().getColumn(2).setPreferredWidth(65);
            Mentor_Info_table.getColumnModel().getColumn(3).setResizable(false);
            Mentor_Info_table.getColumnModel().getColumn(3).setPreferredWidth(32);
            Mentor_Info_table.getColumnModel().getColumn(4).setResizable(false);
            Mentor_Info_table.getColumnModel().getColumn(5).setResizable(false);
            Mentor_Info_table.getColumnModel().getColumn(5).setPreferredWidth(115);
            Mentor_Info_table.getColumnModel().getColumn(6).setResizable(false);
            Mentor_Info_table.getColumnModel().getColumn(6).setPreferredWidth(25);
            Mentor_Info_table.getColumnModel().getColumn(7).setResizable(false);
            Mentor_Info_table.getColumnModel().getColumn(7).setPreferredWidth(65);
        }

        trainer.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 830, 190));

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 153, 255));
        jButton2.setText("Show");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        trainer.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 400, 110, 40));

        jLabel44.setFont(new java.awt.Font("Niagara Engraved", 1, 56)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("Mentor Information");
        trainer.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, 320, 40));

        jButton8.setBackground(new java.awt.Color(0, 0, 0));
        jButton8.setFont(new java.awt.Font("Niagara Engraved", 1, 18)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 204));
        jButton8.setText("Log Out");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        trainer.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 520, 100, 40));

        Mn_fresher.setBackground(new java.awt.Color(204, 204, 255));
        Mn_fresher.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fresher Id", "Fresher Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(Mn_fresher);
        if (Mn_fresher.getColumnModel().getColumnCount() > 0) {
            Mn_fresher.getColumnModel().getColumn(0).setResizable(false);
            Mn_fresher.getColumnModel().getColumn(1).setResizable(false);
        }

        trainer.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 180, 310, 190));

        jLabel5.setFont(new java.awt.Font("Niagara Engraved", 1, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Appointed Trainee");
        trainer.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 120, 250, 40));

        jLabel52.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gym/Pic/table.png"))); // NOI18N
        trainer.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1190, 660));

        pane.addTab("Trainer", trainer);

        subtrainer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fresher_Info_table.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        fresher_Info_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fresher ID", "Fresher_Name", "Contact", "Blood Group", "Package", "Working Hour", "Salary", "Joining Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        fresher_Info_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fresher_Info_tableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(fresher_Info_table);
        if (fresher_Info_table.getColumnModel().getColumnCount() > 0) {
            fresher_Info_table.getColumnModel().getColumn(0).setResizable(false);
            fresher_Info_table.getColumnModel().getColumn(0).setPreferredWidth(43);
            fresher_Info_table.getColumnModel().getColumn(1).setResizable(false);
            fresher_Info_table.getColumnModel().getColumn(1).setPreferredWidth(100);
            fresher_Info_table.getColumnModel().getColumn(2).setResizable(false);
            fresher_Info_table.getColumnModel().getColumn(2).setPreferredWidth(65);
            fresher_Info_table.getColumnModel().getColumn(3).setResizable(false);
            fresher_Info_table.getColumnModel().getColumn(3).setPreferredWidth(32);
            fresher_Info_table.getColumnModel().getColumn(4).setResizable(false);
            fresher_Info_table.getColumnModel().getColumn(5).setResizable(false);
            fresher_Info_table.getColumnModel().getColumn(5).setPreferredWidth(115);
            fresher_Info_table.getColumnModel().getColumn(6).setResizable(false);
            fresher_Info_table.getColumnModel().getColumn(6).setPreferredWidth(25);
            fresher_Info_table.getColumnModel().getColumn(7).setResizable(false);
            fresher_Info_table.getColumnModel().getColumn(7).setPreferredWidth(65);
        }

        subtrainer.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 820, 190));

        jLabel45.setFont(new java.awt.Font("Niagara Engraved", 1, 48)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setText("Sub Trainer  Information");
        subtrainer.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, 380, 60));

        jButton9.setBackground(new java.awt.Color(0, 0, 0));
        jButton9.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 153, 255));
        jButton9.setText("Show");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        subtrainer.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 420, 130, 50));

        fr_member.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Member ID", "Member Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane6.setViewportView(fr_member);
        if (fr_member.getColumnModel().getColumnCount() > 0) {
            fr_member.getColumnModel().getColumn(0).setResizable(false);
            fr_member.getColumnModel().getColumn(1).setResizable(false);
        }

        subtrainer.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 180, 340, 190));

        jLabel2.setFont(new java.awt.Font("Niagara Engraved", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Assigned Member");
        subtrainer.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 110, 250, 50));

        jButton11.setBackground(new java.awt.Color(0, 0, 0));
        jButton11.setFont(new java.awt.Font("Niagara Engraved", 1, 18)); // NOI18N
        jButton11.setForeground(new java.awt.Color(255, 255, 204));
        jButton11.setText("Log Out");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        subtrainer.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 510, 100, 40));

        jLabel51.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gym/Pic/table.png"))); // NOI18N
        subtrainer.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1190, 660));

        pane.addTab("Sub Trainer", subtrainer);

        member.setBackground(new java.awt.Color(204, 204, 204));
        member.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        member.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Member_table.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        Member_table.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        Member_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Contact", "Blood Group", "Package", "Trainer", "Sub Trainer", "Bill"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Member_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Member_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Member_table);
        if (Member_table.getColumnModel().getColumnCount() > 0) {
            Member_table.getColumnModel().getColumn(0).setResizable(false);
            Member_table.getColumnModel().getColumn(1).setResizable(false);
            Member_table.getColumnModel().getColumn(2).setResizable(false);
            Member_table.getColumnModel().getColumn(3).setResizable(false);
            Member_table.getColumnModel().getColumn(4).setResizable(false);
            Member_table.getColumnModel().getColumn(5).setResizable(false);
            Member_table.getColumnModel().getColumn(6).setResizable(false);
            Member_table.getColumnModel().getColumn(7).setResizable(false);
        }

        member.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 1060, 410));

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 153, 255));
        jButton1.setText("Show");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        member.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 600, 120, 40));

        m_del_btn.setBackground(new java.awt.Color(0, 0, 0));
        m_del_btn.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        m_del_btn.setForeground(new java.awt.Color(255, 153, 51));
        m_del_btn.setText("Delete");
        m_del_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_del_btnActionPerformed(evt);
            }
        });
        member.add(m_del_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 530, 90, 40));

        search_by_contact.setBackground(new java.awt.Color(0, 0, 0));
        search_by_contact.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        search_by_contact.setForeground(new java.awt.Color(204, 204, 255));
        search_by_contact.setText("Search");
        search_by_contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_contactActionPerformed(evt);
            }
        });
        member.add(search_by_contact, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 530, 130, 40));

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Member Name");
        member.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, 100, 20));

        mname.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        member.add(mname, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 490, 160, -1));

        jLabel16.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Contact");
        member.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 490, -1, -1));

        mcom.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        member.add(mcom, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 490, 160, -1));

        jLabel17.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Blood Group");
        member.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 490, -1, -1));

        mbg.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        member.add(mbg, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 490, 140, -1));

        m_search_name.setBackground(new java.awt.Color(0, 0, 0));
        m_search_name.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        m_search_name.setForeground(new java.awt.Color(255, 204, 204));
        m_search_name.setText("Search");
        m_search_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_search_nameActionPerformed(evt);
            }
        });
        member.add(m_search_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 530, 130, 40));

        m_clr_btn.setBackground(new java.awt.Color(0, 0, 0));
        m_clr_btn.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        m_clr_btn.setForeground(new java.awt.Color(255, 0, 0));
        m_clr_btn.setText("Clear");
        m_clr_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_clr_btnActionPerformed(evt);
            }
        });
        member.add(m_clr_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 560, 100, 40));

        jButton7.setBackground(new java.awt.Color(0, 0, 0));
        jButton7.setFont(new java.awt.Font("Niagara Engraved", 1, 18)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 204));
        jButton7.setText("Log Out");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        member.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 600, 110, 40));

        search_by_bg.setBackground(new java.awt.Color(0, 0, 0));
        search_by_bg.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        search_by_bg.setForeground(new java.awt.Color(0, 51, 255));
        search_by_bg.setText("Search");
        search_by_bg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_by_bgActionPerformed(evt);
            }
        });
        member.add(search_by_bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 530, 140, 40));

        jLabel18.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Searching By", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        member.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 460, 290, 130));

        jLabel19.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Searching By", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        member.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 460, 270, 130));

        jLabel20.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Seaching By", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        member.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 460, 280, 130));

        jLabel53.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(255, 255, 255));
        jLabel53.setText("Member ID");
        member.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 480, -1, 30));

        me_id.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        me_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                me_idActionPerformed(evt);
            }
        });
        member.add(me_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 480, 110, 40));

        jLabel46.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(204, 0, 0), null, null), "Deleted Through", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 14), new java.awt.Color(255, 0, 0))); // NOI18N
        member.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 460, 260, 130));

        jLabel54.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gym/Pic/table.png"))); // NOI18N
        member.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 660));

        pane.addTab("Member", member);

        equip.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        equip_table.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        equip_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Equipment ID", "Equipment Name", "Condition", "Problem", "LS/PD", "Entry By"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        equip_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                equip_tableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(equip_table);
        if (equip_table.getColumnModel().getColumnCount() > 0) {
            equip_table.getColumnModel().getColumn(0).setResizable(false);
            equip_table.getColumnModel().getColumn(1).setResizable(false);
            equip_table.getColumnModel().getColumn(2).setResizable(false);
            equip_table.getColumnModel().getColumn(3).setResizable(false);
            equip_table.getColumnModel().getColumn(4).setResizable(false);
            equip_table.getColumnModel().getColumn(4).setPreferredWidth(60);
            equip_table.getColumnModel().getColumn(5).setResizable(false);
            equip_table.getColumnModel().getColumn(5).setPreferredWidth(30);
        }

        equip.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 120, 750, 190));

        jLabel1.setFont(new java.awt.Font("Niagara Engraved", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(" Equipment Info");
        equip.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 40, 340, 60));

        Show_btn.setBackground(new java.awt.Color(0, 0, 0));
        Show_btn.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        Show_btn.setForeground(new java.awt.Color(255, 153, 255));
        Show_btn.setText("Show");
        Show_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Show_btnActionPerformed(evt);
            }
        });
        equip.add(Show_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 510, 100, 40));

        en.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        en.setForeground(new java.awt.Color(255, 255, 255));
        en.setText("Equipment Name");
        equip.add(en, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, -1, 30));

        jLabel12.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Equipment ID");
        equip.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, -1));

        ep.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        ep.setForeground(new java.awt.Color(255, 255, 255));
        ep.setText("Problem");
        equip.add(ep, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, -1, -1));

        ed.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        ed.setForeground(new java.awt.Color(255, 255, 255));
        ed.setText("Purchase Date/\n");
        equip.add(ed, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, -1, 30));

        uname.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        uname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unameActionPerformed(evt);
            }
        });
        equip.add(uname, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 200, 30));

        u_id.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        u_id.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                u_idMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                u_idMouseExited(evt);
            }
        });
        equip.add(u_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 200, 30));

        uprb.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        equip.add(uprb, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 260, 200, 30));

        Add_btn.setBackground(new java.awt.Color(0, 0, 0));
        Add_btn.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        Add_btn.setForeground(new java.awt.Color(0, 255, 0));
        Add_btn.setText("Add");
        Add_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_btnActionPerformed(evt);
            }
        });
        equip.add(Add_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 510, 100, 40));

        Update_Btn.setBackground(new java.awt.Color(0, 0, 0));
        Update_Btn.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        Update_Btn.setForeground(new java.awt.Color(204, 204, 255));
        Update_Btn.setText("Update");
        Update_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_BtnActionPerformed(evt);
            }
        });
        equip.add(Update_Btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 510, 90, 40));

        Delete_btn.setBackground(new java.awt.Color(0, 0, 0));
        Delete_btn.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        Delete_btn.setForeground(new java.awt.Color(255, 153, 51));
        Delete_btn.setText("Delete");
        Delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_btnActionPerformed(evt);
            }
        });
        equip.add(Delete_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 510, 90, 40));

        Clear_btn.setBackground(new java.awt.Color(0, 0, 0));
        Clear_btn.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        Clear_btn.setForeground(new java.awt.Color(255, 0, 0));
        Clear_btn.setText("Clear");
        Clear_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Clear_btnActionPerformed(evt);
            }
        });
        equip.add(Clear_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 510, 90, 40));

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setFont(new java.awt.Font("Niagara Engraved", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 204));
        jButton4.setText("Log Out");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        equip.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 570, 100, 40));

        date.setDateFormatString(" yyyy-MM-dd");
        equip.add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, 180, 30));

        el.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        el.setForeground(new java.awt.Color(255, 255, 255));
        el.setText("Last Servicing");
        equip.add(el, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 350, -1, -1));

        ec.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        ec.setForeground(new java.awt.Color(255, 255, 255));
        ec.setText("Condition");
        equip.add(ec, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 70, -1));

        con_mode.add(New_btn);
        New_btn.setFont(new java.awt.Font("Impact", 0, 11)); // NOI18N
        New_btn.setForeground(new java.awt.Color(255, 255, 255));
        New_btn.setText("New");
        New_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                New_btnActionPerformed(evt);
            }
        });
        equip.add(New_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, -1, -1));

        con_mode.add(rec_btn);
        rec_btn.setFont(new java.awt.Font("Impact", 0, 11)); // NOI18N
        rec_btn.setForeground(new java.awt.Color(255, 255, 255));
        rec_btn.setText("Recondition");
        rec_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rec_btnActionPerformed(evt);
            }
        });
        equip.add(rec_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 180, -1, -1));

        con_mode.add(dam_btn);
        dam_btn.setFont(new java.awt.Font("Impact", 0, 11)); // NOI18N
        dam_btn.setForeground(new java.awt.Color(255, 255, 255));
        dam_btn.setText("Damaged");
        dam_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dam_btnActionPerformed(evt);
            }
        });
        equip.add(dam_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, -1, -1));

        con_mode.add(repa_btn);
        repa_btn.setFont(new java.awt.Font("Impact", 0, 11)); // NOI18N
        repa_btn.setForeground(new java.awt.Color(255, 255, 255));
        repa_btn.setText("Repaired");
        repa_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repa_btnActionPerformed(evt);
            }
        });
        equip.add(repa_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, 60, -1));

        E_ID_FORMAT.setFont(new java.awt.Font("Gill Sans Ultra Bold", 0, 11)); // NOI18N
        E_ID_FORMAT.setForeground(new java.awt.Color(255, 0, 0));
        equip.add(E_ID_FORMAT, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 490, 30));

        Cancel.setBackground(new java.awt.Color(255, 0, 0));
        Cancel.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });
        equip.add(Cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 580, 90, 40));

        apply.setBackground(new java.awt.Color(0, 153, 0));
        apply.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        apply.setText("Apply");
        apply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyActionPerformed(evt);
            }
        });
        equip.add(apply, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 450, 90, 40));

        jLabel48.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gym/Pic/table.png"))); // NOI18N
        equip.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1190, 660));

        pane.addTab("Gym Instrument", equip);

        bill.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        expense_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Month", "Trainer Payment", "Current Bill", "Internet Bill", "Water  Bill", "New Equipment", "Acccessories", "Rent", "Others"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        expense_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                expense_tableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(expense_table);
        if (expense_table.getColumnModel().getColumnCount() > 0) {
            expense_table.getColumnModel().getColumn(0).setResizable(false);
            expense_table.getColumnModel().getColumn(1).setResizable(false);
            expense_table.getColumnModel().getColumn(2).setResizable(false);
            expense_table.getColumnModel().getColumn(3).setResizable(false);
            expense_table.getColumnModel().getColumn(4).setResizable(false);
            expense_table.getColumnModel().getColumn(5).setResizable(false);
            expense_table.getColumnModel().getColumn(6).setResizable(false);
            expense_table.getColumnModel().getColumn(7).setResizable(false);
            expense_table.getColumnModel().getColumn(8).setResizable(false);
        }

        bill.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 800, 160));

        jLabel22.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Current Bill");
        bill.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 40, -1, -1));

        cb.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        bill.add(cb, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 40, 120, -1));

        jLabel23.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Internet Bill");
        bill.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 70, -1, -1));

        ib.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        bill.add(ib, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 70, 120, -1));

        jLabel24.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Water Bill");
        bill.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 100, -1, -1));

        wb.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        bill.add(wb, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 100, 120, -1));

        jLabel25.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("New Equipment");
        bill.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 130, -1, -1));

        jLabel26.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Accessories");
        bill.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 40, -1, -1));

        jLabel27.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Rent");
        bill.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 70, -1, -1));

        jLabel28.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Others");
        bill.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 100, -1, -1));

        ne.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        bill.add(ne, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 130, 120, -1));

        ac.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        bill.add(ac, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 40, 110, -1));

        r.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        bill.add(r, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 70, 110, -1));

        o.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        bill.add(o, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 100, 110, -1));

        total.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        bill.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 510, 140, 30));

        jLabel29.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Total Expense");
        bill.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 500, -1, 40));

        b_update_btn.setBackground(new java.awt.Color(0, 0, 0));
        b_update_btn.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        b_update_btn.setForeground(new java.awt.Color(204, 204, 255));
        b_update_btn.setText("Update");
        b_update_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_update_btnActionPerformed(evt);
            }
        });
        bill.add(b_update_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 410, 100, 40));

        b_show_btn.setBackground(new java.awt.Color(0, 0, 0));
        b_show_btn.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        b_show_btn.setForeground(new java.awt.Color(255, 153, 255));
        b_show_btn.setText("Show");
        b_show_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_show_btnActionPerformed(evt);
            }
        });
        bill.add(b_show_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 410, 110, 40));

        b_add_btn.setBackground(new java.awt.Color(0, 0, 0));
        b_add_btn.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        b_add_btn.setForeground(new java.awt.Color(0, 255, 51));
        b_add_btn.setText("Add");
        b_add_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_add_btnActionPerformed(evt);
            }
        });
        bill.add(b_add_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 410, 100, 40));

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 0, 0));
        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        bill.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 410, 100, 40));

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setFont(new java.awt.Font("Niagara Engraved", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 204));
        jButton5.setText("Log out");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        bill.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 550, 100, 40));

        jLabel37.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText(" Trainer Payment");
        bill.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 50, 160, 40));

        payment_total.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        payment_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payment_totalActionPerformed(evt);
            }
        });
        bill.add(payment_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 60, 140, 30));

        payment_calculate.setFont(new java.awt.Font("Niagara Engraved", 1, 18)); // NOI18N
        payment_calculate.setText("Calculate");
        payment_calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payment_calculateActionPerformed(evt);
            }
        });
        bill.add(payment_calculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 100, 100, 40));

        jLabel38.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, java.awt.Color.white, null));
        bill.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 330, 130));

        e_month.setMonth(0);
        bill.add(e_month, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, 30));
        bill.add(e_year, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 80, 30));

        ad_select_ex_month.setFont(new java.awt.Font("Niagara Engraved", 0, 18)); // NOI18N
        ad_select_ex_month.setText("Select");
        ad_select_ex_month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad_select_ex_monthActionPerformed(evt);
            }
        });
        bill.add(ad_select_ex_month, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, 80, 30));

        ad_ex_date_clear.setBackground(new java.awt.Color(0, 0, 0));
        ad_ex_date_clear.setFont(new java.awt.Font("Niagara Engraved", 0, 18)); // NOI18N
        ad_ex_date_clear.setForeground(new java.awt.Color(255, 0, 51));
        ad_ex_date_clear.setText("Clear");
        ad_ex_date_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad_ex_date_clearActionPerformed(evt);
            }
        });
        bill.add(ad_ex_date_clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, 80, 30));

        ad_ex_mon_y.setEditable(false);
        ad_ex_mon_y.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        ad_ex_mon_y.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad_ex_mon_yActionPerformed(evt);
            }
        });
        bill.add(ad_ex_mon_y, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 110, 30));

        jLabel40.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("Billing Month");
        bill.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 120, 30));

        jLabel42.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.lightGray, null, new java.awt.Color(255, 0, 0)));
        bill.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 340, 130));

        total_expense_calculate.setFont(new java.awt.Font("Niagara Engraved", 1, 18)); // NOI18N
        total_expense_calculate.setText("Calculate");
        total_expense_calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                total_expense_calculateActionPerformed(evt);
            }
        });
        bill.add(total_expense_calculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 550, 90, 40));

        jLabel21.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.red, java.awt.Color.white, null, null));
        bill.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 490, 350, 110));

        jLabel43.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.red, java.awt.Color.white, null, null));
        bill.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 30, 470, 150));

        jLabel49.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gym/Pic/table.png"))); // NOI18N
        bill.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1190, 660));

        pane.addTab("Expense", bill);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Bill Pin");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, 31));

        ad_b_pin.setEditable(false);
        jPanel1.add(ad_b_pin, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 120, 40));

        ad_b_up.setBackground(new java.awt.Color(255, 204, 153));
        ad_b_up.setFont(new java.awt.Font("Niagara Engraved", 0, 18)); // NOI18N
        ad_b_up.setText("Update");
        ad_b_up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad_b_upActionPerformed(evt);
            }
        });
        jPanel1.add(ad_b_up, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, 90, 40));

        ad_b_app.setBackground(new java.awt.Color(0, 153, 0));
        ad_b_app.setFont(new java.awt.Font("Niagara Engraved", 0, 18)); // NOI18N
        ad_b_app.setText("Apply");
        ad_b_app.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad_b_appActionPerformed(evt);
            }
        });
        jPanel1.add(ad_b_app, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, 90, 40));

        ad_b_can.setBackground(new java.awt.Color(255, 0, 0));
        ad_b_can.setFont(new java.awt.Font("Niagara Engraved", 0, 18)); // NOI18N
        ad_b_can.setText("Cancel");
        ad_b_can.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad_b_canActionPerformed(evt);
            }
        });
        jPanel1.add(ad_b_can, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, 90, 40));

        jLabel7.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Member ID");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, 40));

        mem_id.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jPanel1.add(mem_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 290, 130, 40));

        jButton10.setFont(new java.awt.Font("Niagara Engraved", 0, 18)); // NOI18N
        jButton10.setText("Search");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 260, 80, 40));

        ad_mem_bill_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Member ID", "Billing Month", "Billing Amount", "Billing Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(ad_mem_bill_table);
        if (ad_mem_bill_table.getColumnModel().getColumnCount() > 0) {
            ad_mem_bill_table.getColumnModel().getColumn(0).setResizable(false);
            ad_mem_bill_table.getColumnModel().getColumn(1).setResizable(false);
            ad_mem_bill_table.getColumnModel().getColumn(2).setResizable(false);
            ad_mem_bill_table.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel1.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, 640, 330));

        mem_bill_show.setFont(new java.awt.Font("Niagara Engraved", 1, 18)); // NOI18N
        mem_bill_show.setText("Show ALL");
        mem_bill_show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mem_bill_showActionPerformed(evt);
            }
        });
        jPanel1.add(mem_bill_show, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 460, 110, 40));

        mem_name.setEditable(false);
        mem_name.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jPanel1.add(mem_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 380, 210, 30));

        mem_pack.setEditable(false);
        mem_pack.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jPanel1.add(mem_pack, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 440, 210, 30));

        mem_bill.setEditable(false);
        mem_bill.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        mem_bill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mem_billActionPerformed(evt);
            }
        });
        jPanel1.add(mem_bill, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 500, 210, 30));

        mem_aod.setEditable(false);
        mem_aod.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        mem_aod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mem_aodActionPerformed(evt);
            }
        });
        jPanel1.add(mem_aod, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 560, 210, 30));

        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Member Name");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, -1, -1));

        jLabel9.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Package");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 440, -1, -1));

        jLabel10.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Bill Amount");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 500, -1, -1));

        jLabel11.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Admission Date");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 560, -1, -1));

        mem_bill_show_one.setBackground(new java.awt.Color(102, 255, 102));
        mem_bill_show_one.setFont(new java.awt.Font("Niagara Engraved", 1, 18)); // NOI18N
        mem_bill_show_one.setText("Show For One");
        mem_bill_show_one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mem_bill_show_oneActionPerformed(evt);
            }
        });
        jPanel1.add(mem_bill_show_one, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 510, 110, 40));

        jLabel13.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Billing Month");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 430, 120, 50));

        b_month.setMonth(0);
        jPanel1.add(b_month, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 380, -1, 30));
        jPanel1.add(b_year, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 380, 80, 30));

        ad_select_bill_month.setFont(new java.awt.Font("Niagara Engraved", 0, 18)); // NOI18N
        ad_select_bill_month.setText("Select");
        ad_select_bill_month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad_select_bill_monthActionPerformed(evt);
            }
        });
        jPanel1.add(ad_select_bill_month, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 380, 80, 30));

        ad_b_b_mon_y.setEditable(false);
        ad_b_b_mon_y.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jPanel1.add(ad_b_b_mon_y, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 440, 100, 30));

        ad_show_billmon.setFont(new java.awt.Font("Niagara Engraved", 1, 18)); // NOI18N
        ad_show_billmon.setText("Show  Monthly");
        ad_show_billmon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad_show_billmonActionPerformed(evt);
            }
        });
        jPanel1.add(ad_show_billmon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 560, 110, 40));

        ad_mem_clear.setBackground(new java.awt.Color(0, 0, 0));
        ad_mem_clear.setFont(new java.awt.Font("Niagara Engraved", 1, 18)); // NOI18N
        ad_mem_clear.setForeground(new java.awt.Color(255, 0, 0));
        ad_mem_clear.setText("Clear");
        ad_mem_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad_mem_clearActionPerformed(evt);
            }
        });
        jPanel1.add(ad_mem_clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 320, 80, 40));

        ad_date_clear.setBackground(new java.awt.Color(0, 0, 0));
        ad_date_clear.setFont(new java.awt.Font("Niagara Engraved", 0, 18)); // NOI18N
        ad_date_clear.setForeground(new java.awt.Color(255, 0, 51));
        ad_date_clear.setText("Clear");
        ad_date_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad_date_clearActionPerformed(evt);
            }
        });
        jPanel1.add(ad_date_clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 440, 80, 30));

        jLabel14.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, null, null));
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 400, 200));

        jLabel15.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, null, null));
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 400, 370));

        jLabel31.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.lightGray, null, new java.awt.Color(255, 0, 0)));
        jPanel1.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 370, 360, 130));

        jLabel34.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText(" Monthly Earnings");
        jPanel1.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 520, 180, 40));

        bill_total.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        bill_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bill_totalActionPerformed(evt);
            }
        });
        jPanel1.add(bill_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 530, 150, 30));

        bill_calculate.setFont(new java.awt.Font("Niagara Engraved", 1, 18)); // NOI18N
        bill_calculate.setText("Calculate");
        bill_calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bill_calculateActionPerformed(evt);
            }
        });
        jPanel1.add(bill_calculate, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 570, 100, 40));

        jLabel35.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.white, java.awt.Color.white, null));
        jPanel1.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 510, 360, 110));

        jLabel50.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gym/Pic/table.png"))); // NOI18N
        jPanel1.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 700));

        pane.addTab("Earnings", jPanel1);

        getContentPane().add(pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 11, 1210, 690));

        jLabel55.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gym/Pic/1200X700(backsteel).png"))); // NOI18N
        getContentPane().add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nidMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nidMouseEntered

    }//GEN-LAST:event_nidMouseEntered

    private void nidMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nidMouseExited

    }//GEN-LAST:event_nidMouseExited

    private void mobileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mobileMouseEntered

    }//GEN-LAST:event_mobileMouseEntered

    private void mobileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mobileMouseExited

    }//GEN-LAST:event_mobileMouseExited

    private void ad_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ad_idActionPerformed

    private void bgMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgMouseEntered

    }//GEN-LAST:event_bgMouseEntered

    private void bgMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bgMouseExited

    }//GEN-LAST:event_bgMouseExited

    private void emailMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emailMouseEntered

    }//GEN-LAST:event_emailMouseEntered

    private void emailMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emailMouseExited

    }//GEN-LAST:event_emailMouseExited

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void ad_outActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad_outActionPerformed
        AdminLog adlg = new AdminLog();
        adlg.setVisible(true);
        dispose();
    }//GEN-LAST:event_ad_outActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            dbc = new DBConnect();
            dbc.connectToDB();

            DefaultTableModel model = (DefaultTableModel) Member_table.getModel();
            model.setRowCount(0);

            resultset = dbc.queryToDB("SELECT * FROM MEMBEREG ");

            while (resultset.next()) {

                String idm = String.valueOf(resultset.getInt("MID"));
                String namem = resultset.getString("NAME");
                String mob = resultset.getString("MOBILE");
                String bl = resultset.getString("BL");
                String pack = resultset.getString("PAC");
                String tr = resultset.getString("TNAME");
                String bill = String.valueOf(resultset.getInt("BILL"));
                String subtr = null;

                resultset2 = dbc.queryToDB("SELECT * FROM ALLOT WHERE MEM_ID =" + idm + " ");
                while (resultset2.next()) {
                    subtr = resultset2.getString("FR_NAME");
                }

                String tableData[] = {idm, namem, mob, bl, pack, tr, subtr, bill};
                DefaultTableModel tableModel = (DefaultTableModel) Member_table.getModel();
                tableModel.addRow(tableData);

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void m_del_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_del_btnActionPerformed
       String mid=me_id.getText();
        if (mid.equals("")  ) {
            JOptionPane.showMessageDialog(null, " Empty Member ID", "Warning !!!", JOptionPane.ERROR_MESSAGE);
        } else {
            

            dbc = new DBConnect();
            try {
                dbc.connectToDB();
                String sql = " DELETE FROM MEMBEREG  WHERE MID=" + mid + " ";
                  String sql2 = " DELETE FROM ALLOT  WHERE MEM_ID=" + mid + " ";
             boolean b=   dbc.insertDataToDB(sql);
              boolean b2=   dbc.insertDataToDB(sql2);
              
              if(b && b2){
             
                dbc.disconnectFromDB();
                JOptionPane.showMessageDialog(null, " Successfully Deleted", "Hurrah!!", JOptionPane.DEFAULT_OPTION);
                
                 try {
            dbc = new DBConnect();
            dbc.connectToDB();

            DefaultTableModel model = (DefaultTableModel) Member_table.getModel();
            model.setRowCount(0);

            resultset = dbc.queryToDB("SELECT * FROM MEMBEREG ");

            while (resultset.next()) {

                String idm = String.valueOf(resultset.getInt("MID"));
                String namem = resultset.getString("NAME");
                String mob = resultset.getString("MOBILE");
                String bl = resultset.getString("BL");
                String pack = resultset.getString("PAC");
                String tr = resultset.getString("TNAME");
                String bill = String.valueOf(resultset.getInt("BILL"));
                String subtr = null;

                resultset2 = dbc.queryToDB("SELECT * FROM ALLOT WHERE MEM_ID =" + idm + " ");
                while (resultset2.next()) {
                    subtr = resultset2.getString("FR_NAME");
                }

                String tableData[] = {idm, namem, mob, bl, pack, tr, subtr, bill};
                DefaultTableModel tableModel = (DefaultTableModel) Member_table.getModel();
                tableModel.addRow(tableData);

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
              }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_m_del_btnActionPerformed

    private void search_by_contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_contactActionPerformed
        String mobi=mcom.getText();
       if(mobi.equals("")){
            JOptionPane.showMessageDialog(null, "Empty Field", "Mobile Number is Missing", JOptionPane.ERROR_MESSAGE);
       }
       else{
               try {
            dbc = new DBConnect();
            dbc.connectToDB();

            DefaultTableModel model = (DefaultTableModel) Member_table.getModel();
            model.setRowCount(0);

            resultset = dbc.queryToDB("SELECT * FROM MEMBEREG WHERE MOBILE= '"+mobi+"' ");

            while (resultset.next()) {

                String idm = String.valueOf(resultset.getInt("MID"));
                String namem = resultset.getString("NAME");
                String mob = resultset.getString("MOBILE");
                String bl = resultset.getString("BL");
                String pack = resultset.getString("PAC");
                String tr = resultset.getString("TNAME");
                String bill = String.valueOf(resultset.getInt("BILL"));
                String subtr = null;

                resultset2 = dbc.queryToDB("SELECT * FROM ALLOT WHERE MEM_ID =" + idm + " ");
                while (resultset2.next()) {
                    subtr = resultset2.getString("FR_NAME");
                }

                String tableData[] = {idm, namem, mob, bl, pack, tr, subtr, bill};
                DefaultTableModel tableModel = (DefaultTableModel) Member_table.getModel();
                tableModel.addRow(tableData);

            }
                   mcom.setText("");
                  dbc.disconnectFromDB();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
       }
    }//GEN-LAST:event_search_by_contactActionPerformed

    private void m_search_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_search_nameActionPerformed
       String name=mname.getText();
       if(name.equals("")){
            JOptionPane.showMessageDialog(null, "Empty Field", "Name is Missing", JOptionPane.ERROR_MESSAGE);
       }
       else{
               try {
            dbc = new DBConnect();
            dbc.connectToDB();

            DefaultTableModel model = (DefaultTableModel) Member_table.getModel();
            model.setRowCount(0);

            resultset = dbc.queryToDB("SELECT * FROM MEMBEREG WHERE NAME LIKE '%"+name+"%' ");

            while (resultset.next()) {

                String idm = String.valueOf(resultset.getInt("MID"));
                String namem = resultset.getString("NAME");
                String mob = resultset.getString("MOBILE");
                String bl = resultset.getString("BL");
                String pack = resultset.getString("PAC");
                String tr = resultset.getString("TNAME");
                String bill = String.valueOf(resultset.getInt("BILL"));
                String subtr = null;

                resultset2 = dbc.queryToDB("SELECT * FROM ALLOT WHERE MEM_ID =" + idm + " ");
                while (resultset2.next()) {
                    subtr = resultset2.getString("FR_NAME");
                }

                String tableData[] = {idm, namem, mob, bl, pack, tr, subtr, bill};
                DefaultTableModel tableModel = (DefaultTableModel) Member_table.getModel();
                tableModel.addRow(tableData);

            }
                   mname.setText("");
                  dbc.disconnectFromDB();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
       }
    }//GEN-LAST:event_m_search_nameActionPerformed

    private void m_clr_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_clr_btnActionPerformed
        mname.setText("");
        mcom.setText("");
        mbg.setText("");
        
    }//GEN-LAST:event_m_clr_btnActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        AdminLog adlg = new AdminLog();
        adlg.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void Show_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Show_btnActionPerformed
        try {
            dbc = new DBConnect();
            dbc.connectToDB();

            DefaultTableModel model = (DefaultTableModel) equip_table.getModel();
            model.setRowCount(0);

            resultset = dbc.queryToDB("SELECT * FROM  EQUIPMENT ");

            while (resultset.next()) {
                String id = resultset.getString("EID");
                String name = resultset.getString("ENAME");
                String con = resultset.getString("CON");
                String prb = resultset.getString("PROBLEM");
                String lp = resultset.getString("LP");
                String idad = resultset.getString("ENID");

                String tableData[] = {id, name, con, prb, lp, idad};
                DefaultTableModel tableModel = (DefaultTableModel) equip_table.getModel();
                tableModel.addRow(tableData);

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_Show_btnActionPerformed

    private void unameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unameActionPerformed

    }//GEN-LAST:event_unameActionPerformed

    private void Add_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_btnActionPerformed
        int ida = Integer.parseInt(ad_id.getText());
        String id = u_id.getText();
        String name = uname.getText();
        String problem = uprb.getText();
        String da = ((JTextField) date.getDateEditor().getUiComponent()).getText();

        if (id.equals("") || name.equals("") || problem.equals("") || da.equals("") || temp == 0) {
            JOptionPane.showMessageDialog(null, "Opps!! Empty Fields", "Warning", JOptionPane.ERROR_MESSAGE);
        } else {
            dbc = new DBConnect();
            try {
                dbc.connectToDB();

                boolean b = dbc.ADDToDB("INSERT INTO EQUIPMENT(EID, EName,CON,PROBLEM,LP,ENID) VALUES('" + id + "', '" + name + "','" + modes + "','" + problem + "','" + da + "'," + ida + ")");
                if (b) {
                    JOptionPane.showMessageDialog(null, " Successfully Inserted", "Hurrah!!", JOptionPane.DEFAULT_OPTION);
                    dbc.disconnectFromDB();

                    uname.setText("");
                    u_id.setText("");
                    uprb.setText("");
                    con_mode.clearSelection();
                    date.setCalendar(null);

                    try {
                        dbc = new DBConnect();
                        dbc.connectToDB();

                        DefaultTableModel model = (DefaultTableModel) equip_table.getModel();
                        model.setRowCount(0);

                        resultset = dbc.queryToDB("SELECT * FROM  EQUIPMENT ");

                        while (resultset.next()) {
                            String ide = resultset.getString("EID");
                            String namee = resultset.getString("ENAME");
                            String con = resultset.getString("CON");
                            String prb = resultset.getString("PROBLEM");
                            String lp = resultset.getString("LP");
                             String idad = resultset.getString("ENID");

                            String tableData[] = {ide, namee, con, prb, lp,idad};
                            DefaultTableModel tableModel = (DefaultTableModel) equip_table.getModel();
                            tableModel.addRow(tableData);

                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }

                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }

    }//GEN-LAST:event_Add_btnActionPerformed

    private void Update_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_BtnActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Are you sure?", "WARNING!!!",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

            String id = u_id.getText();
            String name = uname.getText();
            String problem = uprb.getText();
            String da = ((JTextField) date.getDateEditor().getUiComponent()).getText();

            if (id.equals("") || name.equals("") || problem.equals("") || da.equals("") || temp == 0) {
                JOptionPane.showMessageDialog(null, "Opps!! Empty Fields", "Warning", JOptionPane.ERROR_MESSAGE);
            } else {

                en.setForeground(Color.red);
                ec.setForeground(Color.red);
                ep.setForeground(Color.red);
                el.setForeground(Color.red);
                ed.setForeground(Color.red);

                u_id.setEditable(false);

                apply.setVisible(true);
                Cancel.setVisible(true);

            }
        }
    }//GEN-LAST:event_Update_BtnActionPerformed

    private void Delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_btnActionPerformed
        // remove_equipment re=new remove_equipment();
        // re.setVisible(true);
        /*  String name = uname.getText();
        if (gym_flag == 1) {

            try {

                Class.forName("com.mysql.jdbc.Driver");
                database = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/kazi_gym", "root", "");

                String sql = "delete from equipment where name=?  ";
                PreparedStatement p = database.prepareStatement(sql);

                p.setString(1, name);

                p.execute();
                JOptionPane.showMessageDialog(null, "Successfully Deleted");
                updateTable();
                database.close();

                uname.setText("");
                uqn.setText("");
                ucon.setText("");
                uprb.setText("");
                user.setText("");

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Opps!! Unable to Delete the ID", "Missing", JOptionPane.ERROR_MESSAGE);
        } */
    }//GEN-LAST:event_Delete_btnActionPerformed

    private void Clear_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Clear_btnActionPerformed
        uname.setText("");
        u_id.setText("");
        uprb.setText("");
        con_mode.clearSelection();
        date.setCalendar(null);

    }//GEN-LAST:event_Clear_btnActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        AdminLog adlg = new AdminLog();
        adlg.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void b_update_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_update_btnActionPerformed
        String t = payment_total.getText();
        String c = cb.getText();
        String i = ib.getText();
        String w = wb.getText();
        String n = ne.getText();
        String a = ac.getText();
        String re = r.getText();
        String ot = o.getText();
        String m = ad_ex_mon_y.getText();

        if (m.equals("") || t.equals("") || c.equals("") || i.equals("") || w.equals("") || n.equals("") || a.equals("") || re.equals("") || ot.equals("")) {
            JOptionPane.showMessageDialog(null, " Empty Data", "Expense Missing", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                dbc = new DBConnect();
                dbc.connectToDB();
                String sql = " UPDATE EXPENSE SET TP=" + t + " ,CB=" + c + ",IB=" + i + ",WB=" + w + ",NB=" + n + ",ACC=" + a + ",RENT=" + re + ",OTHERS=" + ot + "  WHERE    MOY='" + m + "' ";

                boolean b = dbc.insertDataToDB(sql);
                if (b) {
                    dbc.disconnectFromDB();

                    JOptionPane.showMessageDialog(null, " Successfully Updated the Expense Info", "Hurrah!!", JOptionPane.DEFAULT_OPTION);
                    try {
                        dbc = new DBConnect();
                        dbc.connectToDB();

                        DefaultTableModel model = (DefaultTableModel) expense_table.getModel();
                        model.setRowCount(0);

                        resultset = dbc.queryToDB("SELECT * FROM  EXPENSE  ");

                        while (resultset.next()) {

                            String mn = resultset.getString("MOY");
                            String tp = String.valueOf(resultset.getInt("TP"));
                            String cb = String.valueOf(resultset.getInt("CB"));
                            String ib = String.valueOf(resultset.getInt("IB"));
                            String wb = String.valueOf(resultset.getInt("WB"));
                            String nb = String.valueOf(resultset.getInt("NB"));
                            String acc = String.valueOf(resultset.getInt("ACC"));
                            String ren = String.valueOf(resultset.getInt("RENT"));
                            String oth = String.valueOf(resultset.getInt("OTHERS"));

                            String tableData[] = {mn, tp, cb, ib, wb, nb, acc, ren, oth};
                            DefaultTableModel tableModel = (DefaultTableModel) expense_table.getModel();
                            tableModel.addRow(tableData);
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }

        }

    }//GEN-LAST:event_b_update_btnActionPerformed

    private void b_show_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_show_btnActionPerformed
        try {
            dbc = new DBConnect();
            dbc.connectToDB();

            DefaultTableModel model = (DefaultTableModel) expense_table.getModel();
            model.setRowCount(0);

            resultset = dbc.queryToDB("SELECT * FROM  EXPENSE  ");

            while (resultset.next()) {

                String m = resultset.getString("MOY");
                String tp = String.valueOf(resultset.getInt("TP"));
                String cb = String.valueOf(resultset.getInt("CB"));
                String ib = String.valueOf(resultset.getInt("IB"));
                String wb = String.valueOf(resultset.getInt("WB"));
                String nb = String.valueOf(resultset.getInt("NB"));
                String acc = String.valueOf(resultset.getInt("ACC"));
                String re = String.valueOf(resultset.getInt("RENT"));
                String ot = String.valueOf(resultset.getInt("OTHERS"));

                String tableData[] = {m, tp, cb, ib, wb, nb, acc, re, ot};
                DefaultTableModel tableModel = (DefaultTableModel) expense_table.getModel();
                tableModel.addRow(tableData);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }


    }//GEN-LAST:event_b_show_btnActionPerformed

    private void b_add_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_add_btnActionPerformed
        String t = payment_total.getText();
        String c = cb.getText();
        String i = ib.getText();
        String w = wb.getText();
        String n = ne.getText();
        String a = ac.getText();
        String re = r.getText();
        String ot = o.getText();
        String m = ad_ex_mon_y.getText();

        try {

            if (m.equals("") || t.equals("") || c.equals("") || i.equals("") || w.equals("") || n.equals("") || a.equals("") || re.equals("") || ot.equals("")) {
                JOptionPane.showMessageDialog(null, "Empty Field", "Something Missing", JOptionPane.ERROR_MESSAGE);
            } else {

                dbc = new DBConnect();
                dbc.connectToDB();
                String sql = "INSERT INTO EXPENSE(MOY,TP,CB,IB,WB,NB,ACC,RENT,OTHERS) VALUES('" + m + "', " + t + "," + c + "," + i + "," + w + "," + n + "," + a + "," + re + "," + ot + ") ";
                boolean b = dbc.insertDataToDB(sql);
                if (b) {
                    dbc.disconnectFromDB();

                    try {
                        dbc = new DBConnect();
                        dbc.connectToDB();

                        DefaultTableModel model = (DefaultTableModel) expense_table.getModel();
                        model.setRowCount(0);

                        resultset = dbc.queryToDB("SELECT * FROM  EXPENSE  ");

                        while (resultset.next()) {

                            String mn = resultset.getString("MOY");
                            String tp = String.valueOf(resultset.getInt("TP"));
                            String cb = String.valueOf(resultset.getInt("CB"));
                            String ib = String.valueOf(resultset.getInt("IB"));
                            String wb = String.valueOf(resultset.getInt("WB"));
                            String nb = String.valueOf(resultset.getInt("NB"));
                            String acc = String.valueOf(resultset.getInt("ACC"));
                            String ren = String.valueOf(resultset.getInt("RENT"));
                            String oth = String.valueOf(resultset.getInt("OTHERS"));

                            String tableData[] = {mn, tp, cb, ib, wb, nb, acc, ren, oth};
                            DefaultTableModel tableModel = (DefaultTableModel) expense_table.getModel();
                            tableModel.addRow(tableData);
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }

                    payment_total.setText("");
                    cb.setText("");
                    ib.setText("");
                    wb.setText("");
                    ne.setText("");
                    ac.setText("");
                    r.setText("");
                    o.setText("");
                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_b_add_btnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        payment_total.setText("");
        cb.setText("");
        ib.setText("");
        wb.setText("");
        ne.setText("");
        ac.setText("");
        r.setText("");
        o.setText("");


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        AdminLog adlg = new AdminLog();
        adlg.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void paneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paneMouseClicked

    }//GEN-LAST:event_paneMouseClicked

    private void pic_pathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pic_pathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pic_pathActionPerformed

    private void ad_pic_choserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad_pic_choserActionPerformed
        try {
            pic.setIcon(null);
            pic_path.setText("");
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);
            File f = chooser.getSelectedFile();
            String filename = f.getAbsolutePath();
            pic_path.setText(filename);
            Image getAbsolutePath = null;
            ImageIcon icon = new ImageIcon(filename);
            Image image = icon.getImage().getScaledInstance(pic.getWidth(), pic.getHeight(), Image.SCALE_SMOOTH);
            pic.setIcon(icon);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_ad_pic_choserActionPerformed

    private void ad_applyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad_applyActionPerformed
        String pin = JOptionPane.showInputDialog("Please Enter Your Password");
        String id = ad_id.getText();
        try {
            dbc = new DBConnect();
            dbc.connectToDB();

            String sql = "SELECT * FROM ADMINREG WHERE AID='" + id + "' AND PASS='" + pin + "' ";

            ResultSet rs;
            rs = dbc.queryToDB(sql);

            if (rs.next()) {
                JOptionPane.showMessageDialog(null, " Thank you", "Verified!!", JOptionPane.DEFAULT_OPTION);
                flag = 1;

            } else {

                JOptionPane.showMessageDialog(null, "Opps!! Wrong Password", "Warning", JOptionPane.ERROR_MESSAGE);

            }
            dbc.disconnectFromDB();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        if (flag == 1) {
            dbc = new DBConnect();
            try {
                String a = age.getText();
                String wt = weight.getText();
                String mob = mobile.getText();
                String mail = email.getText();
                String pic = pic_path.getText();
                boolean cm = checkmobile(mob);
                boolean ce = checkemail(mail);

                if (cm && ce) {
                    dbc.connectToDB();
                    String sql = " UPDATE ADMINREG SET AGE='" + a + "' ,WE='" + wt + "' ,MOBILE='" + mob + "',EMAIL='" + mail + "',PIC='" + pic + "'  WHERE AID='" + id + "' AND PASS='" + pin + "' ";
                    dbc.insertDataToDB(sql);

                    JOptionPane.showMessageDialog(null, " Successfully Updated", "Hurrah!!", JOptionPane.DEFAULT_OPTION);

                    dbc.disconnectFromDB();

                    ad_pic_choser.setVisible(false);
                    pic_path.setVisible(false);
                    ad_apply.setVisible(false);
                    ad_clr.setVisible(false);

                    ag.setForeground(Color.WHITE);
                    w.setForeground(Color.WHITE);
                    m.setForeground(Color.WHITE);
                    e.setForeground(Color.WHITE);
                    
                        age.setEditable(false);
                        weight.setEditable(false);
                        email.setEditable(false);
                        mobile.setEditable(false);
                         ad_up.setVisible(true);


                } else {
                    JOptionPane.showMessageDialog(null, "Opps!! Wrong Format", "Warning", JOptionPane.ERROR_MESSAGE);
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_ad_applyActionPerformed

    private void ad_upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad_upActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Are you sure?", "WARNING!!!",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

            age.setEditable(true);
            weight.setEditable(true);
            email.setEditable(true);
            mobile.setEditable(true);

            ag.setForeground(Color.red);
            w.setForeground(Color.red);
            m.setForeground(Color.red);
            e.setForeground(Color.red);

            ad_pic_choser.setVisible(true);
            pic_path.setVisible(true);
            pic_path.setText(path);
            ad_apply.setVisible(true);
            ad_clr.setVisible(true);
            ad_up.setVisible(false);

        } else {

        }
    }//GEN-LAST:event_ad_upActionPerformed

    private void ad_clrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad_clrActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Are you sure?", "WARNING!!!",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

            age.setEditable(false);
            weight.setEditable(false);
            email.setEditable(false);
            mobile.setEditable(false);

            ag.setForeground(Color.WHITE);
            w.setForeground(Color.WHITE);
            m.setForeground(Color.WHITE);
            e.setForeground(Color.WHITE);

            ad_pic_choser.setVisible(false);
            pic_path.setVisible(false);

            ad_apply.setVisible(false);
            ad_clr.setVisible(false);
             ad_up.setVisible(true);

        } else {

        }
    }//GEN-LAST:event_ad_clrActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        AdminLog adlg = new AdminLog();
        adlg.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            dbc = new DBConnect();
            dbc.connectToDB();

            DefaultTableModel model = (DefaultTableModel) Mentor_Info_table.getModel();
            model.setRowCount(0);

            resultset = dbc.queryToDB("SELECT * FROM MENTOR ");

            while (resultset.next()) {

                String idm = String.valueOf(resultset.getInt("TID"));
                String namem = resultset.getString("NAME");
                String mob = resultset.getString("MOBILE");
                String bl = resultset.getString("BL");
                String pack = resultset.getString("PAC");
                String shift = resultset.getString("SHIFT");
                String date = resultset.getString("DOJ");
                String sal = String.valueOf(resultset.getInt("SALARY"));

                String tableData[] = {idm, namem, mob, bl, pack, shift, sal, date};
                DefaultTableModel tableModel = (DefaultTableModel) Mentor_Info_table.getModel();
                tableModel.addRow(tableData);

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        try {
            dbc = new DBConnect();
            dbc.connectToDB();

            DefaultTableModel model = (DefaultTableModel) fresher_Info_table.getModel();
            model.setRowCount(0);

            resultset = dbc.queryToDB("SELECT * FROM TRAINEREG ");

            while (resultset.next()) {

                String idm = String.valueOf(resultset.getInt("TID"));
                String namem = resultset.getString("NAME");
                String mob = resultset.getString("MOBILE");
                String bl = resultset.getString("BL");
                String pack = resultset.getString("PAC");
                String shift = resultset.getString("SHIFT");
                String date = resultset.getString("DOJ");
                String sal = String.valueOf(resultset.getInt("SALARY"));

                String tableData[] = {idm, namem, mob, bl, pack, shift, sal, date};
                DefaultTableModel tableModel = (DefaultTableModel) fresher_Info_table.getModel();
                tableModel.addRow(tableData);

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void fresher_Info_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fresher_Info_tableMouseClicked
     
        int index = fresher_Info_table.getSelectedRow();
        TableModel model = fresher_Info_table.getModel();
        String id = model.getValueAt(index, 0).toString();

        try {
            dbc = new DBConnect();
            dbc.connectToDB();

            DefaultTableModel mode = (DefaultTableModel) fr_member.getModel();
            mode.setRowCount(0);

            resultset = dbc.queryToDB("SELECT * FROM ALLOT WHERE FR_ID=" + id + " ");

            while (resultset.next()) {

                String idm = String.valueOf(resultset.getInt("MEM_ID"));
                String namem = resultset.getString("MEM_NAME");

                String tableData[] = {idm, namem};
                DefaultTableModel tableModel = (DefaultTableModel) fr_member.getModel();
                tableModel.addRow(tableData);

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }



    }//GEN-LAST:event_fresher_Info_tableMouseClicked

    private void Mentor_Info_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Mentor_Info_tableMouseClicked
        int index = Mentor_Info_table.getSelectedRow();
        TableModel model = Mentor_Info_table.getModel();
        String id = model.getValueAt(index, 0).toString();

        try {
            dbc = new DBConnect();
            dbc.connectToDB();

            DefaultTableModel mode = (DefaultTableModel) Mn_fresher.getModel();
            mode.setRowCount(0);

            resultset = dbc.queryToDB("SELECT  TID,NAME FROM TRAINEREG WHERE M_TID=" + id + " ");

            while (resultset.next()) {

                String idm = String.valueOf(resultset.getInt("TID"));
                String namem = resultset.getString("NAME");

                String tableData[] = {idm, namem};
                DefaultTableModel tableModel = (DefaultTableModel) Mn_fresher.getModel();
                tableModel.addRow(tableData);

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_Mentor_Info_tableMouseClicked

    private void New_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_New_btnActionPerformed
        temp = 1;
        modes = "New";
    }//GEN-LAST:event_New_btnActionPerformed

    private void rec_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rec_btnActionPerformed
        temp = 2;
        modes = "Recondition";
    }//GEN-LAST:event_rec_btnActionPerformed

    private void dam_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dam_btnActionPerformed
        temp = 3;
        modes = "Damaged";
    }//GEN-LAST:event_dam_btnActionPerformed

    private void repa_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repa_btnActionPerformed
        temp = 4;
        modes = "Repaired";
    }//GEN-LAST:event_repa_btnActionPerformed

    private void u_idMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u_idMouseEntered
        E_ID_FORMAT.setText("SerialNumber-Name's significant two Digit-PD");
    }//GEN-LAST:event_u_idMouseEntered

    private void u_idMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_u_idMouseExited
        E_ID_FORMAT.setText("");
    }//GEN-LAST:event_u_idMouseExited

    private void equip_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_equip_tableMouseClicked
        int index = equip_table.getSelectedRow();
        TableModel model = equip_table.getModel();
        String id = model.getValueAt(index, 0).toString();
        String name = model.getValueAt(index, 1).toString();
        String con = model.getValueAt(index, 2).toString();
        String pr = model.getValueAt(index, 3).toString();
        String lp = model.getValueAt(index, 4).toString();

        u_id.setText(id);
        uname.setText(name);

        if (con.equals("New")) {
            New_btn.setSelected(true);
            temp = 1;
            modes = "New";
        }
        if (con.equals("Recondition")) {
            rec_btn.setSelected(true);
            temp = 2;
            modes = "Recondition";
        }
        if (con.equals("Damaged")) {
            dam_btn.setSelected(true);
            temp = 3;
            modes = "Damaged";

        }
        if (con.equals("Repair")) {
            repa_btn.setSelected(true);
            temp = 4;
            modes = "Repaired";
        }

        uprb.setText(pr);
        Date da = null;
        try {
            da = new SimpleDateFormat("yyyy-MM-dd").parse(lp);
        } catch (ParseException ex) {
            Logger.getLogger(AdminMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        date.setDate(da);

    }//GEN-LAST:event_equip_tableMouseClicked

    private void applyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyActionPerformed
        String id = u_id.getText();
        String name = uname.getText();
        String problem = uprb.getText();
        String da = ((JTextField) date.getDateEditor().getUiComponent()).getText();
        int ida = Integer.parseInt(ad_id.getText());

        dbc = new DBConnect();
        try {
            dbc.connectToDB();
            String sql = " UPDATE EQUIPMENT SET ENAME='" + name + "' ,CON='" + modes + "',PROBLEM='" + problem + "',LP='" + da + "',ENID=" + ida + "  WHERE EID='" + id + "' ";
            boolean b = dbc.insertDataToDB(sql);
            if (b) {
                JOptionPane.showMessageDialog(null, " Successfully Updated the Info", "Hurrah!!", JOptionPane.DEFAULT_OPTION);
                dbc.disconnectFromDB();

                en.setForeground(Color.WHITE);
                ec.setForeground(Color.WHITE);
                ep.setForeground(Color.WHITE);
                el.setForeground(Color.WHITE);
                ed.setForeground(Color.WHITE);

                u_id.setEditable(true);

                apply.setVisible(false);
                Cancel.setVisible(false);

                uname.setText("");
                u_id.setText("");
                uprb.setText("");
                con_mode.clearSelection();
                date.setCalendar(null);

                try {
                    dbc = new DBConnect();
                    dbc.connectToDB();

                    DefaultTableModel model = (DefaultTableModel) equip_table.getModel();
                    model.setRowCount(0);

                    resultset = dbc.queryToDB("SELECT * FROM  EQUIPMENT ");

                    while (resultset.next()) {
                        String ide = resultset.getString("EID");
                        String namee = resultset.getString("ENAME");
                        String con = resultset.getString("CON");
                        String prb = resultset.getString("PROBLEM");
                        String lp = resultset.getString("LP");
                        String idad = resultset.getString("ENID");

                        String tableData[] = {ide, namee, con, prb, lp, idad};
                        DefaultTableModel tableModel = (DefaultTableModel) equip_table.getModel();
                        tableModel.addRow(tableData);

                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }


    }//GEN-LAST:event_applyActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed

        en.setForeground(Color.WHITE);
        ec.setForeground(Color.WHITE);
        ep.setForeground(Color.WHITE);
        el.setForeground(Color.WHITE);
        ed.setForeground(Color.WHITE);

        u_id.setEditable(true);

        apply.setVisible(false);
        Cancel.setVisible(false);
    }//GEN-LAST:event_CancelActionPerformed

    private void ad_b_upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad_b_upActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Are you sure?", "WARNING!!!",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            ad_b_app.setVisible(true);
            ad_b_can.setVisible(true);
            ad_b_pin.setEditable(true);
            ad_b_up.setVisible(false);
        }
    }//GEN-LAST:event_ad_b_upActionPerformed

    private void ad_b_canActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad_b_canActionPerformed
        ad_b_app.setVisible(false);
        ad_b_can.setVisible(false);
        ad_b_pin.setEditable(false);
         ad_b_up.setVisible(true);
    }//GEN-LAST:event_ad_b_canActionPerformed

    private void ad_b_appActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad_b_appActionPerformed
        dbc = new DBConnect();
        String adpin = ad_b_pin.getText();
        String id = ad_id.getText();
        try {
            dbc.connectToDB();
            String sql = " UPDATE ADMINREG SET PIN='" + adpin + "'  WHERE AID=" + id + " ";
            boolean b = dbc.insertDataToDB(sql);
            if (b) {
                dbc.disconnectFromDB();
                JOptionPane.showMessageDialog(null, " Successfully Updated the Info", "Hurrah!!", JOptionPane.DEFAULT_OPTION);
                ad_b_app.setVisible(false);
                ad_b_can.setVisible(false);
                ad_b_pin.setEditable(false);
                  ad_b_up.setVisible(true);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_ad_b_appActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        String mid = mem_id.getText();
        if (mid.equals("")) {
            JOptionPane.showMessageDialog(null, "Opps!! Empty Member ID", "Warning", JOptionPane.ERROR_MESSAGE);
        } else {
            try {

                dbc = new DBConnect();
                dbc.connectToDB();

                String sql = "SELECT NAME,BILL,PAC,AOD FROM MEMBEREG WHERE  MID =" + mid + "";

                ResultSet rs;
                rs = dbc.queryToDB(sql);
                if (rs.next()) {
                    mem_name.setText(rs.getString(1));
                    mem_bill.setText((rs.getString(2)));
                    mem_pack.setText(rs.getString(3));
                    mem_aod.setText(rs.getString(4));

                    mem_bill_show_one.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(null, " Invalid ID", "Warning", JOptionPane.ERROR_MESSAGE);
                    mem_id.setText("");

                }
                dbc.disconnectFromDB();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void mem_bill_showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mem_bill_showActionPerformed

        try {
            dbc = new DBConnect();
            dbc.connectToDB();

            DefaultTableModel model = (DefaultTableModel) ad_mem_bill_table.getModel();
            model.setRowCount(0);

            resultset = dbc.queryToDB("SELECT * FROM BILLS  ");

            while (resultset.next()) {
                String memid = String.valueOf(resultset.getInt("MID"));
                String bm = resultset.getString("BM");
                String ba = String.valueOf(resultset.getInt("BA"));
                String bd = resultset.getString("BD");

                String tableData[] = {memid, bm, ba, bd};
                DefaultTableModel tableModel = (DefaultTableModel) ad_mem_bill_table.getModel();
                tableModel.addRow(tableData);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_mem_bill_showActionPerformed

    private void mem_billActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mem_billActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mem_billActionPerformed

    private void mem_aodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mem_aodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mem_aodActionPerformed

    private void mem_bill_show_oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mem_bill_show_oneActionPerformed
        int mid = Integer.parseInt(mem_id.getText());
        try {
            dbc = new DBConnect();
            dbc.connectToDB();

            DefaultTableModel model = (DefaultTableModel) ad_mem_bill_table.getModel();
            model.setRowCount(0);

            resultset = dbc.queryToDB("SELECT MID,BM,BA,BD FROM BILLS WHERE MID=" + mid + " ");

            while (resultset.next()) {
                String memid = String.valueOf(resultset.getInt("MID"));
                String bm = resultset.getString("BM");
                String ba = String.valueOf(resultset.getInt("BA"));
                String bd = resultset.getString("BD");

                String tableData[] = {memid, bm, ba, bd};
                DefaultTableModel tableModel = (DefaultTableModel) ad_mem_bill_table.getModel();
                tableModel.addRow(tableData);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_mem_bill_show_oneActionPerformed

    private void ad_select_bill_monthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad_select_bill_monthActionPerformed
        String mon = null;
        switch (b_month.getMonth()) {
            case 0:
                mon = "Jan";
                break;
            case 1:
                mon = "Feb";
                break;
            case 2:
                mon = "Mar";
                break;
            case 3:
                mon = "Apr";
                break;
            case 4:
                mon = "May";
                break;
            case 5:
                mon = "June";
                break;
            case 6:
                mon = "July";
                break;
            case 7:
                mon = "Aug";
                break;
            case 8:
                mon = "Sep";
                break;
            case 9:
                mon = "Oct";
                break;
            case 10:
                mon = "Nov";
                break;
            case 11:
                mon = "Dec";
                break;
            default:
                break;
        }

        int ye = b_year.getYear();
        String y = Integer.toString(ye);
        String halfy = y.length() > 2 ? y.substring(y.length() - 2) : y;

        String bill_month = mon + halfy;
        ad_b_b_mon_y.setText(bill_month);

        ad_show_billmon.setVisible(true);
    }//GEN-LAST:event_ad_select_bill_monthActionPerformed

    private void ad_show_billmonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad_show_billmonActionPerformed
        String billmon = ad_b_b_mon_y.getText();
        if (billmon.equals("")) {
            JOptionPane.showMessageDialog(null, "Empty Billing Month", "Warning", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                dbc = new DBConnect();
                dbc.connectToDB();

                DefaultTableModel model = (DefaultTableModel) ad_mem_bill_table.getModel();
                model.setRowCount(0);

                resultset = dbc.queryToDB("SELECT MID,BM,BA,BD FROM BILLS WHERE BM='" + billmon + "' ");

                while (resultset.next()) {
                    String memid = String.valueOf(resultset.getInt("MID"));
                    String bm = resultset.getString("BM");
                    String ba = String.valueOf(resultset.getInt("BA"));
                    String bd = resultset.getString("BD");

                    String tableData[] = {memid, bm, ba, bd};
                    DefaultTableModel tableModel = (DefaultTableModel) ad_mem_bill_table.getModel();
                    tableModel.addRow(tableData);

                    ad_show_billmon.setVisible(false);

                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_ad_show_billmonActionPerformed

    private void ad_date_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad_date_clearActionPerformed
        ad_show_billmon.setVisible(false);
        ad_b_b_mon_y.setText("");
    }//GEN-LAST:event_ad_date_clearActionPerformed

    private void ad_mem_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad_mem_clearActionPerformed
        mem_id.setText("");
        mem_bill.setText("");
        mem_pack.setText("");
        mem_aod.setText("");
        mem_bill_show_one.setVisible(false);


    }//GEN-LAST:event_ad_mem_clearActionPerformed

    private void bill_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bill_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bill_totalActionPerformed

    private void bill_calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bill_calculateActionPerformed
        String billmon = ad_b_b_mon_y.getText();
        if (billmon.equals("")) {
            JOptionPane.showMessageDialog(null, "Empty Billing Month", "Warning", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                dbc = new DBConnect();
                dbc.connectToDB();

                resultset = dbc.queryToDB("SELECT SUM(BA) AS 'TOTAL' FROM BILLS WHERE BM='" + billmon + "' ");

                if (resultset.next()) {

                    int ba = resultset.getInt("TOTAL");
                    String b = String.valueOf(ba);
                    bill_total.setText(b);
                    dbc.disconnectFromDB();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_bill_calculateActionPerformed

    private void payment_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payment_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_payment_totalActionPerformed

    private void payment_calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payment_calculateActionPerformed
        int m = 0;
        int t = 0;
        String p = null;
        try {
            dbc = new DBConnect();
            dbc.connectToDB();

            resultset = dbc.queryToDB("SELECT SUM(SALARY) AS 'TOTALM' FROM MENTOR  ");

            if (resultset.next()) {

                m = resultset.getInt("TOTALM");

            }

            resultset2 = dbc.queryToDB("SELECT SUM(SALARY) AS 'TOTALT' FROM TRAINEREG  ");

            if (resultset2.next()) {

                t = resultset2.getInt("TOTALT");

            }
            tm_payment = m + t;
            p = String.valueOf(tm_payment);
            payment_total.setText(p);
            dbc.disconnectFromDB();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_payment_calculateActionPerformed

    private void ad_select_ex_monthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad_select_ex_monthActionPerformed
        String mon = null;
        switch (e_month.getMonth()) {
            case 0:
                mon = "Jan";
                break;
            case 1:
                mon = "Feb";
                break;
            case 2:
                mon = "Mar";
                break;
            case 3:
                mon = "Apr";
                break;
            case 4:
                mon = "May";
                break;
            case 5:
                mon = "June";
                break;
            case 6:
                mon = "July";
                break;
            case 7:
                mon = "Aug";
                break;
            case 8:
                mon = "Sep";
                break;
            case 9:
                mon = "Oct";
                break;
            case 10:
                mon = "Nov";
                break;
            case 11:
                mon = "Dec";
                break;
            default:
                break;
        }

        int ye = e_year.getYear();
        String y = Integer.toString(ye);
        String halfy = y.length() > 2 ? y.substring(y.length() - 2) : y;

        String ex_month = mon + halfy;
        ad_ex_mon_y.setText(ex_month);
    }//GEN-LAST:event_ad_select_ex_monthActionPerformed

    private void ad_ex_date_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad_ex_date_clearActionPerformed

        ad_ex_mon_y.setText("");
    }//GEN-LAST:event_ad_ex_date_clearActionPerformed

    private void expense_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_expense_tableMouseClicked
        int index = expense_table.getSelectedRow();
        TableModel model = expense_table.getModel();
        String moy = model.getValueAt(index, 0).toString();
        String cbt = model.getValueAt(index, 2).toString();
        String ibt = model.getValueAt(index, 3).toString();
        String wbt = model.getValueAt(index, 4).toString();
        String nb = model.getValueAt(index, 5).toString();
        String acc = model.getValueAt(index, 6).toString();
        String rent = model.getValueAt(index, 7).toString();
        String others = model.getValueAt(index, 8).toString();

        cb.setText(cbt);
        ib.setText(ibt);
        wb.setText(wbt);
        ne.setText(nb);
        ac.setText(acc);
        r.setText(rent);
        o.setText(others);
        ad_ex_mon_y.setText(moy);


    }//GEN-LAST:event_expense_tableMouseClicked

    private void total_expense_calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_total_expense_calculateActionPerformed
        String t = payment_total.getText();
        String c = cb.getText();
        String i = ib.getText();
        String w = wb.getText();
        String n = ne.getText();
        String a = ac.getText();
        String re = r.getText();
        String ot = o.getText();

      
        
        int ex=0;

        if (t.equals("") || c.equals("") || i.equals("") || w.equals("") || n.equals("") || a.equals("") || re.equals("") || ot.equals("")) {
            JOptionPane.showMessageDialog(null, "Empty Field", "Something Missing", JOptionPane.ERROR_MESSAGE);
        } else {
        int tp = Integer.parseInt(t);
        int cu = Integer.parseInt(c);
        int in = Integer.parseInt(i);
        int wa = Integer.parseInt(w);
        int ne = Integer.parseInt(n);
        int ac = Integer.parseInt(a);
        int r = Integer.parseInt(re);
        int oth = Integer.parseInt(ot);
            
            ex=tp+cu+in+wa+ne+ac+r+oth;
            String e=String.valueOf(ex);
            total.setText(e);
        }

    }//GEN-LAST:event_total_expense_calculateActionPerformed

    private void ad_ex_mon_yActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad_ex_mon_yActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ad_ex_mon_yActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
         AdminLog adlg = new AdminLog();
        adlg.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void search_by_bgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_by_bgActionPerformed
           String bg=mbg.getText();
       if(bg.equals("")){
            JOptionPane.showMessageDialog(null, "Empty Field", "Blood Group is Missing", JOptionPane.ERROR_MESSAGE);
       }
       else{
               try {
            dbc = new DBConnect();
            dbc.connectToDB();

            DefaultTableModel model = (DefaultTableModel) Member_table.getModel();
            model.setRowCount(0);

            resultset = dbc.queryToDB("SELECT * FROM MEMBEREG WHERE BL LIKE '"+bg+"' ");

            while (resultset.next()) {

                String idm = String.valueOf(resultset.getInt("MID"));
                String namem = resultset.getString("NAME");
                String mob = resultset.getString("MOBILE");
                String bl = resultset.getString("BL");
                String pack = resultset.getString("PAC");
                String tr = resultset.getString("TNAME");
                String bill = String.valueOf(resultset.getInt("BILL"));
                String subtr = null;

                resultset2 = dbc.queryToDB("SELECT * FROM ALLOT WHERE MEM_ID =" + idm + " ");
                while (resultset2.next()) {
                    subtr = resultset2.getString("FR_NAME");
                }

                String tableData[] = {idm, namem, mob, bl, pack, tr, subtr, bill};
                DefaultTableModel tableModel = (DefaultTableModel) Member_table.getModel();
                tableModel.addRow(tableData);

            }
                   mbg.setText("");
                  dbc.disconnectFromDB();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
       }
    }//GEN-LAST:event_search_by_bgActionPerformed

    private void me_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_me_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_me_idActionPerformed

    private void Member_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Member_tableMouseClicked
         int index = Member_table.getSelectedRow();
        TableModel model = Member_table.getModel();
        String id = model.getValueAt(index, 0).toString();
        
        me_id.setText(id);
    }//GEN-LAST:event_Member_tableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        Admin_Info ai = null;
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminMain(ai).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_btn;
    private javax.swing.JButton Cancel;
    private javax.swing.JButton Clear_btn;
    private javax.swing.JButton Delete_btn;
    private javax.swing.JLabel E_ID_FORMAT;
    private javax.swing.JTable Member_table;
    private javax.swing.JTable Mentor_Info_table;
    private javax.swing.JTable Mn_fresher;
    private javax.swing.JRadioButton New_btn;
    private javax.swing.JButton Show_btn;
    private javax.swing.JButton Update_Btn;
    private javax.swing.JTextField ac;
    private javax.swing.JButton ad_apply;
    private javax.swing.JButton ad_b_app;
    private javax.swing.JTextField ad_b_b_mon_y;
    private javax.swing.JButton ad_b_can;
    private javax.swing.JTextField ad_b_pin;
    private javax.swing.JButton ad_b_up;
    private javax.swing.JButton ad_clr;
    private javax.swing.JButton ad_date_clear;
    private javax.swing.JButton ad_ex_date_clear;
    private javax.swing.JTextField ad_ex_mon_y;
    private javax.swing.JTextField ad_id;
    private javax.swing.JTable ad_mem_bill_table;
    private javax.swing.JButton ad_mem_clear;
    private javax.swing.JButton ad_out;
    private javax.swing.JButton ad_pic_choser;
    private javax.swing.JButton ad_select_bill_month;
    private javax.swing.JButton ad_select_ex_month;
    private javax.swing.JButton ad_show_billmon;
    private javax.swing.JButton ad_up;
    private javax.swing.JLabel ag;
    private javax.swing.JTextField age;
    private javax.swing.JButton apply;
    private javax.swing.JButton b_add_btn;
    private com.toedter.calendar.JMonthChooser b_month;
    private javax.swing.JButton b_show_btn;
    private javax.swing.JButton b_update_btn;
    private com.toedter.calendar.JYearChooser b_year;
    private javax.swing.JTextField bg;
    private javax.swing.JPanel bill;
    private javax.swing.JButton bill_calculate;
    private javax.swing.JTextField bill_total;
    private javax.swing.JTextField cb;
    private javax.swing.ButtonGroup con_mode;
    private javax.swing.JRadioButton dam_btn;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JLabel e;
    private com.toedter.calendar.JMonthChooser e_month;
    private com.toedter.calendar.JYearChooser e_year;
    private javax.swing.JLabel ec;
    private javax.swing.JLabel ed;
    private javax.swing.JLabel el;
    private javax.swing.JTextField email;
    private javax.swing.JLabel en;
    private javax.swing.JLabel ep;
    private javax.swing.JPanel equip;
    private javax.swing.JTable equip_table;
    private javax.swing.JTable expense_table;
    private javax.swing.JTextField f_name;
    private javax.swing.JTable fr_member;
    private javax.swing.JTable fresher_Info_table;
    private javax.swing.JTextField gender;
    private javax.swing.JTextField height;
    private javax.swing.JTextField ib;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel m;
    private javax.swing.JButton m_clr_btn;
    private javax.swing.JButton m_del_btn;
    private javax.swing.JButton m_search_name;
    private javax.swing.JTextField mbg;
    private javax.swing.JTextField mcom;
    private javax.swing.JTextField me_id;
    private javax.swing.JTextField mem_aod;
    private javax.swing.JTextField mem_bill;
    private javax.swing.JButton mem_bill_show;
    private javax.swing.JButton mem_bill_show_one;
    private javax.swing.JTextField mem_id;
    private javax.swing.JTextField mem_name;
    private javax.swing.JTextField mem_pack;
    private javax.swing.JPanel member;
    private javax.swing.JTextField mname;
    private javax.swing.JTextField mobile;
    private javax.swing.JTextField ne;
    private javax.swing.JTextField nid;
    private javax.swing.JTextField o;
    private javax.swing.JTabbedPane pane;
    private javax.swing.JButton payment_calculate;
    private javax.swing.JTextField payment_total;
    private javax.swing.JLabel pic;
    private javax.swing.JTextField pic_path;
    private javax.swing.JTextField r;
    private javax.swing.JRadioButton rec_btn;
    private javax.swing.JRadioButton repa_btn;
    private javax.swing.JButton search_by_bg;
    private javax.swing.JButton search_by_contact;
    private javax.swing.JLabel show_pass;
    private javax.swing.JPanel subtrainer;
    private javax.swing.JTextField total;
    private javax.swing.JButton total_expense_calculate;
    private javax.swing.JPanel trainer;
    private javax.swing.JTextField u_id;
    private javax.swing.JTextField uname;
    private javax.swing.JTextField uprb;
    private javax.swing.JLabel w;
    private javax.swing.JTextField wb;
    private javax.swing.JTextField weight;
    // End of variables declaration//GEN-END:variables
}
